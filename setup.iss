; Setup wizard for Set-ClassicTheme
; Version 1.0.0
; Copyright Â© Ziv Kedem 2020
; Licensed under the GNU GPL version 3; see LICENSE.txt for details.
; Script mostly generated by the Inno Script Studio Wizard.

#define MyAppName "Set-ClassicTheme"
#define MyAppVersion "1.0.0"
#define MyAppPublisher "zkedem"
#define MyAppExeName "Set-ClassicTheme.ps1"

; For Control Panel:
#define CplGUID "{{5188F44B-EA9C-42D7-BFAF-1215FC051628}"
#define CplName "Classic Theme Settings"
#define CplInfoTip "Activate the Windows Classic theme."
#define CplCategory "1"
#define CplIcon "%SystemRoot%\System32\psr.exe,-212"
#define CplCommand "powershell.exe -Windowstyle Hidden " + MyAppExeName + " -GUI"

#include "environment.iss"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{E866ADE2-1B4E-4348-96AD-58FE0A6C2B37}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppPublisher={#MyAppPublisher}
DefaultDirName={pf}\{#MyAppName}
DefaultGroupName={#MyAppName}
AllowNoIcons=yes
LicenseFile={#SourcePath}\LICENSE.txt
OutputDir={#SourcePath}
OutputBaseFilename={#MyAppName}-v{#MyAppVersion}
Compression=lzma
SolidCompression=yes
ChangesEnvironment=true

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Files]
Source: "{#SourcePath}\Set-ClassicTheme.ps1"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#SourcePath}\LICENSE.txt"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#SourcePath}\MainWindow.xaml"; DestDir: "{app}"; Flags: ignoreversion
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"

[Registry]
Root: "HKCR"; Subkey: "CLSID\{#CplGUID}"; Flags: uninsdeletekey
Root: "HKCR"; Subkey: "CLSID\{#CplGUID}"; ValueType: string; ValueData: "{#CplName}"; Flags: uninsdeletevalue
Root: "HKCR"; Subkey: "CLSID\{#CplGUID}"; ValueType: string; ValueName: "InfoTip"; ValueData: "{#CplInfoTip}"; Flags: uninsdeletevalue
Root: "HKCR"; Subkey: "CLSID\{#CplGUID}"; ValueType: string; ValueName: "System.ControlPanel.Category"; ValueData: "{#CplCategory}"; Flags: uninsdeletevalue
Root: "HKCR"; Subkey: "CLSID\{#CplGUID}\DefaultIcon"; Flags: uninsdeletekey
Root: "HKCR"; Subkey: "CLSID\{#CplGUID}\DefaultIcon"; ValueType: string; ValueData: "{#CplIcon}"; Flags: uninsdeletevalue
Root: "HKCR"; Subkey: "CLSID\{#CplGUID}\Shell\Open\Command"; Flags: uninsdeletekey
Root: "HKCR"; Subkey: "CLSID\{#CplGUID}\Shell\Open\Command"; ValueType: string; ValueData: "{#CplCommand}"; Flags: uninsdeletevalue
Root: "HKLM"; Subkey: "SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\ControlPanel\NameSpace\{#CplGUID}"; Flags: uninsdeletekey
; For 64-bit systems:
Root: "HKCR64"; Subkey: "CLSID\{#CplGUID}"; Flags: uninsdeletekey; Check: IsWin64
Root: "HKCR64"; Subkey: "CLSID\{#CplGUID}"; ValueType: string; ValueData: "{#CplName}"; Flags: uninsdeletevalue; Check: IsWin64
Root: "HKCR64"; Subkey: "CLSID\{#CplGUID}"; ValueType: string; ValueName: "InfoTip"; ValueData: "{#CplInfoTip}"; Flags: uninsdeletevalue; Check: IsWin64
Root: "HKCR64"; Subkey: "CLSID\{#CplGUID}"; ValueType: string; ValueName: "System.ControlPanel.Category"; ValueData: "{#CplCategory}"; Flags: uninsdeletevalue; Check: IsWin64
Root: "HKCR64"; Subkey: "CLSID\{#CplGUID}\DefaultIcon"; Flags: uninsdeletekey; Check: IsWin64
Root: "HKCR64"; Subkey: "CLSID\{#CplGUID}\DefaultIcon"; ValueType: string; ValueData: "{#CplIcon}"; Flags: uninsdeletevalue; Check: IsWin64
Root: "HKCR64"; Subkey: "CLSID\{#CplGUID}\Shell\Open\Command"; Flags: uninsdeletekey; Check: IsWin64
Root: "HKCR64"; Subkey: "CLSID\{#CplGUID}\Shell\Open\Command"; ValueType: string; ValueData: "{#CplCommand}"; Flags: uninsdeletevalue; Check: IsWin64
Root: "HKLM64"; Subkey: "SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\ControlPanel\NameSpace\{#CplGUID}"; Flags: uninsdeletekey; Check: IsWin64

[Code]
{
The following code, along with environment.iss, was adapted from Wojciech Mleczek's post on Stack Overflow.
For more information, go to https://stackoverflow.com/a/46609047
}

procedure CurStepChanged(CurStep: TSetupStep);
begin
    if CurStep = ssPostInstall 
     then EnvAddPath(ExpandConstant('{app}'));
end;

procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
begin
    if CurUninstallStep = usPostUninstall
    then EnvRemovePath(ExpandConstant('{app}'));
end;
